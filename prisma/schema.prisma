generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }

model Merchant { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid name String slug String @unique email String createdAt DateTime @default(now()) updatedAt DateTime @default(now()) Transaction Transaction[] User User[] Product Product[] Order Order[] ApiKey ApiKey[] }
model ApiKey { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid merchantId String @db.Uuid key String @unique revoked Boolean @default(false) createdAt DateTime @default(now()) merchant Merchant @relation(fields:[merchantId], references:[id]) }
model Provider { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid name String @unique type String config Json? createdAt DateTime @default(now()) Transaction Transaction[] }
model Transaction { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid merchantId String? @db.Uuid providerId String? @db.Uuid providerTxId String? amount Decimal? @db.Decimal(18,2) currency String? @default("INR") status String? metadata Json? createdAt DateTime @default(now()) updatedAt DateTime @default(now()) Merchant Merchant? @relation(fields:[merchantId], references:[id]) Provider Provider? @relation(fields:[providerId], references:[id]) @@index([merchantId, status]) @@index([createdAt]) }
model User { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid merchantId String @db.Uuid email String @unique password String role String @default("user") createdAt DateTime @default(now()) updatedAt DateTime @default(now()) Merchant Merchant @relation(fields:[merchantId], references:[id]) }
model Product { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid merchantId String @db.Uuid sku String @unique name String price Decimal @db.Decimal(18,2) currency String @default("INR") createdAt DateTime @default(now()) updatedAt DateTime @default(now()) Merchant Merchant @relation(fields:[merchantId], references:[id]) OrderItem OrderItem[] }
model Order { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid merchantId String @db.Uuid userId String @db.Uuid status String @default("created") amount Decimal @db.Decimal(18,2) currency String @default("INR") createdAt DateTime @default(now()) updatedAt DateTime @default(now()) Merchant Merchant @relation(fields:[merchantId], references:[id]) User User @relation(fields:[userId], references:[id]) OrderItem OrderItem[] }
model OrderItem { id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid orderId String @db.Uuid productId String @db.Uuid qty Int price Decimal @db.Decimal(18,2) createdAt DateTime @default(now()) Order Order @relation(fields:[orderId], references:[id]) Product Product @relation(fields:[productId], references:[id]) }