import crypto from 'crypto';import { Injectable } from '@nestjs/common';import { HttpClient } from '../../../common/http.client';import { VaultService } from '../../../common/vault.service';import { retry } from '../../../common/retry';import { IPaymentProvider } from '../types/ipayment-provider';function timingEqualSafe(a,b){try{const A=Buffer.from(a);const B=Buffer.from(b);if(A.length!==B.length)return false;return crypto.timingSafeEqual(A,B);}catch{return false;}}@Injectable()export class CashfreeProvider implements IPaymentProvider{constructor(private http:HttpClient,private vault:VaultService){}name(){return 'cashfree';}private async creds(){const app_id=await this.vault.get('providers/cashfree','app_id')||process.env.CASHFREE_APP_ID;const secret_key=await this.vault.get('providers/cashfree','secret_key')||process.env.CASHFREE_SECRET_KEY;if(!app_id||!secret_key)throw new Error('Cashfree credentials missing');return{app_id,secret_key};}async createPayment(input){const{app_id,secret_key}=await this.creds();const headers={'x-client-id':app_id,'x-client-secret':secret_key,'Content-Type':'application/json','Idempotency-Key':input.orderId};const call=async()=>{const data=await this.http.request('https://api.cashfree.com/pg/orders',{method:'POST',headers,body:JSON.stringify({order_amount:input.amount,order_currency:input.currency,order_id:input.orderId,customer_details:input.customer})});return data;};const data=await retry(call,4,400);return{id:data.order_id||input.orderId,status:'created',data};}async capturePayment(pid,amount){const{app_id,secret_key}=await this.creds();const headers={'x-client-id':app_id,'x-client-secret':secret_key,'Content-Type':'application/json'};const call=async()=>{const data=await this.http.request(`https://api.cashfree.com/pg/charges/${pid}/capture`,{method:'POST',headers,body:JSON.stringify({amount})});return data;};const data=await retry(call,3,400);return{id:pid,status:data?.status||'captured',data};}async verifyWebhook({headers,body}){const signature=(headers['x-webhook-signature']||headers['x-checksum']||'');const secret=process.env.WEBHOOK_SECRET_CASHFREE||'';if(!signature||!secret)return{ok:false,data:body};const payload=JSON.stringify(body);const computed=crypto.createHmac('sha256',secret).update(payload).digest('base64');const ok=timingEqualSafe(signature,computed);return{ok,providerPaymentId:body?.data?.payment?.payment_id,orderId:body?.data?.order?.order_id,status:body?.type,data:body};}}